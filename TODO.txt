Debugging

/run a = {["soundFileName"] = "blade_flurry", ["name"] = "Blade Flurry"}; rgpvpw.alert.PlayAlert("rogue", 3, a)
/run rgpvpw.alert.PlayAlert("rogue", 3, a)

Trinket is SPELL_CAST_SUCCESS

THen depending on the class a different name?

immune_charm/fear/polymorph - rogue
immune_fear/polymorph/stun - priest
immune_root/snare/stun - warrior


This require to rewrite the normalizing function to replace / with _


This happens when a debuff is extended. Check if this works with sheep?
Example player already has vampiric embrace on him. Priest casts it again (duration gets refreshed)
SPELL_AURA_REFRESH

Need a tactic to how to work with certain spells such as touch of weakness

tow triggers when buffed
tow triggers when buff disappears
tow triggers when buff is applied to player (me)


For spells such as kidney shot we need to have a concept how we wanna track/announce them

- Am I interested in just if my target is casting a cheapshot
- Does the cheapshot have to be applied to me?


-- TODO ignored for now
-- skilled shield bash has a silence effect
["shield_bash_silenced"] = {
  ["name"] = "Shield Bash - Silenced",
  ["soundFileName"] = "shield_bash_silenced",
  ["spellId"] = 18498,
  ["spellIcon"] = "ability_warrior_shieldbash",
  ["hasFade"] = false,
  ["active"] = true
},


-- TODO ignored mage spells for now

,
["polymorph_cow"] = {
  ["name"] = "Polymorph: Cow",
  ["soundFileName"] = "polymorph",
  ["spellId"] = 28270,
  ["spellIcon"] = "spell_nature_polymorph_cow",
  ["hasFade"] = false,
  ["active"] = true,
  ["ignoreEvents"] = {
    "CHAT_MSG_SPELL_AURA_GONE_OTHER",
    "CHAT_MSG_SPELL_PERIODIC_HOSTILEPLAYER_DAMAGE"
  }
},
["polymorph_pig"] = {
  ["name"] = "Polymorph: Pig",
  ["soundFileName"] = "polymorph",
  ["spellId"] = 28272,
  ["spellIcon"] = "spell_magic_polymorphpig",
  ["hasFade"] = false,
  ["active"] = true,
  ["ignoreEvents"] = {
    "CHAT_MSG_SPELL_AURA_GONE_OTHER",
    "CHAT_MSG_SPELL_PERIODIC_HOSTILEPLAYER_DAMAGE"
  }
},
["polymorph_turtle"] = {
  ["name"] = "Polymorph: Turtle",
  ["soundFileName"] = "polymorph",
  ["spellId"] = 28271,
  ["spellIcon"] = "ability_hunter_pet_turtle",
  ["hasFade"] = false,
  ["active"] = true,
  ["ignoreEvents"] = {
    "CHAT_MSG_SPELL_AURA_GONE_OTHER",
    "CHAT_MSG_SPELL_PERIODIC_HOSTILEPLAYER_DAMAGE"
  }
}

Those do not currenlty exist check patch status and how they are displayed in the combat log


-----------------------------
Need to check sourceflags

Tested in duell and got
local sourceFlags = 1352

Might be different against an alliance player?


-----

Warrior add last stand

["last_stand"] = {
  ["name"] = "Last Stand",
  ["soundFileName"] = "last_stand",
  ["spellId"] = 12975,
  ["spellIcon"] = "spell_holy_ashestoashes",
  ["hasFade"] = true,
  ["active"] = true
  -- TODO NOT VERIFIED
},

["shield_bash"] = {
  ["name"] = "Shield Bash",
  ["soundFileName"] = "shield_bash",
  ["spellId"] = 1672,
  ["spellIcon"] = "ability_warrior_shieldbash",
  ["hasFade"] = false,
  ["active"] = true
  -- TODO NOT VERIFIED
},

["shield_wall"] = {
  ["name"] = "Shield Wall",
  ["soundFileName"] = "shield_wall",
  ["spellId"] = 871,
  ["spellIcon"] = "ability_warrior_shieldwall",
  ["hasFade"] = true,
  ["active"] = true
  -- TODO NOT VERIFIED
},

function me.TestSoundShieldWall()
  local testName = "TestSoundShieldWall"
  local spellName = "Shield Wall"
  local _, spellData = mod.spellMap.SearchByName(spellName, RGPVPW_CONSTANTS.EVENT_SPELL_AURA_APPLIED)

  mod.testReporter.StartTestRun(testName)

  local status = mod.sound.PlaySound(
    testCategory,
    RGPVPW_CONSTANTS.SPELL_TYPES.NORMAL,
    spellData.soundFileName
  )

  if status then
    mod.testReporter.ReportSuccessTestRun()
  else
    mod.testReporter.ReportFailureTestRun(mod.testHelper.unableToPlay)
  end
end

function me.TestSoundDownShieldWall()
  local testName = "TestSoundDownShieldWall"
  local spellName = "Shield Wall"
  local _, spellData = mod.spellMap.SearchByName(spellName, RGPVPW_CONSTANTS.EVENT_SPELL_AURA_REMOVED)

  mod.testReporter.StartTestRun(testName)

  local status = mod.sound.PlaySound(
    testCategory,
    RGPVPW_CONSTANTS.SPELL_TYPES.REMOVED,
    spellData.soundFileName
  )

  if status then
    mod.testReporter.ReportSuccessTestRun()
  else
    mod.testReporter.ReportFailureTestRun(mod.testHelper.unableToPlay)
  end
end

-- TODO add priest spells to spellmap

["desperate_prayer"] = {
  ["name"] = "Desperate Prayer",
  ["soundFileName"] = "desperate_prayer",
  ["spellId"] = 19243, -- rank 7
  ["spellIcon"] = "spell_holy_restoration",
  ["hasFade"] = false,
  ["active"] = true
},

["elunes_grace"] = {
  ["name"] = "Elune's Grace",
  ["soundFileName"] = "elunes_grace",
  ["spellId"] = 19293, -- rank 5
  ["spellIcon"] = "spell_holy_elunesgrace",
  ["hasFade"] = true,
  ["active"] = true,
  ["trackedEvents"] = {
    "SPELL_AURA_APPLIED",
    "SPELL_AURA_REMOVED",
  }
  -- TODO NOT VERIFIED
},
["starshards"] = {
  ["name"] = "Starshards",
  ["soundFileName"] = "starshards",
  ["spellId"] = 19305, -- rank 7
  ["spellIcon"] = "spell_arcane_starfire",
  ["hasFade"] = false,
  ["active"] = true,
  ["trackedEvents"] = {
    "SPELL_CAST_SUCCESS"
  }
  -- TODO NOT VERIFIED
},
["hex_of_weakness"] = {
  ["name"] = "Hex of Weakness",
  ["soundFileName"] = "hex_of_weakness",
  ["spellId"] = 19285, -- rank 6
  ["spellIcon"] = "spell_shadow_fingerofdeath",
  ["hasFade"] = false,
  ["active"] = true,
  ["trackedEvents"] = {
    "SPELL_AURA_APPLIED",
    -- "SPELL_AURA_REMOVED", ignoring fade
    "SPELL_AURA_REFRESH"
  }
  -- TODO NOT VERIFIED
}

-- MAGE

--[[
  TODO

  This is also causing a

  {
    ["target"] = "",
    ["spellName"] = "Polymorph",
    ["event"] = "SPELL_CAST_START",
    ["sourceFlags"] = 1300,
  }, -- [13278]

  Might consider this  as a separate category (announce casts or something

TODO)
]]--
