# PVPWarn Docker Services
# 
# Usage:
#   docker compose run --rm luacheck                    # Run lua linting
#   docker compose run --rm luacheck-report             # Generate lua lint report
#   docker compose run --rm combat-log-parser           # Parse combat logs 
#   docker compose run --rm combat-log-parser-report    # Parse combat logs with report output
#   docker compose run --rm verify-sounds               # Verify sound files exist
#   docker compose run --rm verify-sounds-report        # Verify sound files with detailed report
#   docker compose run --rm verify-spellmap             # Verify SpellMap and SpellAvoidMap
#   docker compose run --rm verify-spellmap-report      # Verify SpellMap with report output
#   docker compose run --rm voice-generator             # Generate voice files using ElevenLabs API
#
# Note: Services with "-report" suffix generate output files in ./target/ directory

services:
  luacheck:
    image: ragedunicorn/luacheck:1.2.0-alpine3.22.1-1
    container_name: pvpwarn-luacheck
    volumes:
      - ./:/workspace:ro
    working_dir: /workspace
    command: ["."]
  luacheck-report:
    image: ragedunicorn/luacheck:1.2.0-alpine3.22.1-1
    container_name: pvpwarn-luacheck-report
    volumes:
      - ./:/workspace:ro
      - ./target:/reports
    working_dir: /workspace
    entrypoint: /bin/sh
    command: ["-c", "luacheck --formatter JUnit . > /reports/luacheck-junit.xml"]
  combat-log-parser:
    image: ragedunicorn/python:3-alpine3.22.1-1
    volumes:
      - ./tools/combat_log_parser:/app
      - ./code:/code
      - ./combat-logs:/combat-logs
    working_dir: /app
    entrypoint: [ ]
    command:
      - sh
      - -c
      - |
        pip install -r requirements.txt &&
        python parse_combat_logs.py \
          --logs-dir /combat-logs \
          --spellmap /code/SpellMap.lua
  combat-log-parser-report:
    image: ragedunicorn/python:3-alpine3.22.1-1
    volumes:
      - ./tools/combat_log_parser:/app
      - ./code:/code
      - ./combat-logs:/combat-logs
      - ./target:/target
    working_dir: /app
    entrypoint: [ ]
    command:
      - sh
      - -c
      - |
        pip install -r requirements.txt &&
        python parse_combat_logs.py \
          --spellmap /code/SpellMap.lua \
          --logs-dir /combat-logs \
          --output-dir /target/combat_log_parser_output
  verify-sounds:
    image: ragedunicorn/python:3-alpine3.22.1-1
    volumes:
      - ./tools/verify_sounds:/app
      - ./assets/sounds/en:/assets
      - ./code:/code
    working_dir: /app
    entrypoint: [ ]
    command:
      - sh
      - -c
      - |
        pip install -r requirements.txt &&
        python verify_sounds.py \
          --sound-path /assets \
          --spellmap /code/SpellMap.lua \
          --spellavoidmap /code/SpellAvoidMap.lua
  verify-sounds-report:
    image: ragedunicorn/python:3-alpine3.22.1-1
    volumes:
      - ./tools/verify_sounds:/app
      - ./assets/sounds/en:/assets
      - ./code:/code
      - ./target:/target
    working_dir: /app
    entrypoint: []
    command:
      - sh
      - -c
      - |
        pip install -r requirements.txt &&
        mkdir -p /target/verify_sounds_output &&
        python verify_sounds.py \
          --sound-path /assets \
          --spellmap /code/SpellMap.lua \
          --spellavoidmap /code/SpellAvoidMap.lua \
          --output-format detailed > /target/verify_sounds_output/verification_report.txt
  verify-spellmap:
    image: ragedunicorn/python:3-alpine3.22.1-1
    volumes:
      - ./tools/verify_spellmap:/app
      - ./code:/code
    working_dir: /app
    entrypoint: [ ]
    command:
      - sh
      - -c
      - |
        pip install -r requirements.txt &&
        python verify_spellmap.py \
          --spellmap /code/SpellMap.lua \
          --spellavoidmap /code/SpellAvoidMap.lua
  verify-spellmap-report:
    image: ragedunicorn/python:3-alpine3.22.1-1
    volumes:
      - ./tools/verify_spellmap:/app
      - ./code:/code
      - ./target:/target
    working_dir: /app
    entrypoint: [ ]
    command:
      - sh
      - -c
      - |
        pip install -r requirements.txt &&
        mkdir -p /target/verify_spellmap_output &&
        python verify_spellmap.py \
          --spellmap /code/SpellMap.lua \
          --spellavoidmap /code/SpellAvoidMap.lua > /target/verify_spellmap_output/verification_report.txt
  voice-generator:
    image: ragedunicorn/python:3-alpine3.22.1-1
    volumes:
      - ./tools/voice_generator:/app
      - ./code:/code
      - ./target:/target
    working_dir: /app
    entrypoint: [ ]
    env_file:
      - ./tools/voice_generator/.env
    command:
      - sh
      - -c
      - |
        pip install -r requirements.txt &&
        python generate_voices.py all \
          --spellmap /code/SpellMap.lua \
          --spellavoidmap /code/SpellAvoidMap.lua \
          --output /target/voice_output
